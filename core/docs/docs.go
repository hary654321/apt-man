// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-06 12:36:01.267044 +0800 CST m=+0.621534243

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://zrDispatch",
        "contact": {
            "name": "labulaka521",
            "url": "http://www.swagger.io/support",
            "email": "labulakalia@gmail.com"
        },
        "license": {
            "name": "MIT 2.0",
            "url": "https://zrDispatch/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/host": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all registry host",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "get all hosts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete host",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "delete host",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "StopHost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.GetID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/host/select": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Get Task Select",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/host/stop": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "stop host worker",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "stop host worker",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "StopHost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.GetID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/hostgroup": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get select option",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HostGroup"
                ],
                "summary": "get name,id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change hostgroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HostGroup"
                ],
                "summary": "change hostgroup",
                "parameters": [
                    {
                        "description": "HostGroup",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.ChangeHostGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new hostgroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HostGroup"
                ],
                "summary": "create hostgroup",
                "parameters": [
                    {
                        "description": "HostGroup",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.CreateHostGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete hostgroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HostGroup"
                ],
                "summary": "delete hostgroup",
                "parameters": [
                    {
                        "description": "HostGroup",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.GetID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/hostgroup/hosts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all hostgroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HostGroup"
                ],
                "summary": "get host detail by hostgroup id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PreSearchName",
                        "name": "psname",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Self Create Task",
                        "name": "self",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "change task",
                "parameters": [
                    {
                        "description": "change task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.ChangeTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "create new task",
                "parameters": [
                    {
                        "description": "create task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.CreateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "delete task",
                "parameters": [
                    {
                        "description": "delete task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.GetID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/clone": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "create a task by copy old task",
                "parameters": [
                    {
                        "description": "clone task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.IDName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "create a task by copy old task",
                "parameters": [
                    {
                        "description": "clean task log",
                        "name": "Log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.Cleanlog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/cron": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "parse cronexpr",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expr",
                        "name": "expr",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "ID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/kill": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "kill running task",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/log": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "taskName",
                        "name": "taskname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/log/tree": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks log tree data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "StartTime",
                        "name": "start_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/run": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/running": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/task/select": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get Task Select",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/admin": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "admin change user's role,forbid,password,remark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "admin change user info",
                "parameters": [
                    {
                        "description": "Admin Change User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.AdminChangeUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get all users info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get user info by token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change self config,like email,wechat,dingphone,slack,telegram,password,remark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "user change self's config info",
                "parameters": [
                    {
                        "description": "Change Self User Info",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.ChangeUserSelf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "login user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/logout": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "logout user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/registry": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "registry new user",
                "parameters": [
                    {
                        "description": "registry user",
                        "name": "Registry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/define.RegistryUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user/select": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "return name,id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "define.AdminChangeUser": {
            "type": "object",
            "required": [
                "id",
                "role"
            ],
            "properties": {
                "forbid": {
                    "description": "禁止用户: 1 未禁止 2 禁止登陆",
                    "type": "boolean"
                },
                "id": {
                    "description": "user id",
                    "type": "string"
                },
                "password": {
                    "description": "用户密码 Common",
                    "type": "string"
                },
                "remark": {
                    "description": "备注 Common",
                    "type": "string"
                },
                "role": {
                    "description": "用户类型: 1 普通用户 2 管理员",
                    "type": "integer"
                }
            }
        },
        "define.ChangeHostGroup": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "addrs": {
                    "description": "主机host",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "define.ChangeTask": {
            "type": "object",
            "required": [
                "alarm_status",
                "alarm_userids",
                "cronexpr",
                "host_groupid",
                "id",
                "name",
                "route_policy",
                "task_data",
                "task_type",
                "timeout"
            ],
            "properties": {
                "alarm_status": {
                    "description": "alarm when task run success or fail or all all:-2 failed: -1 success: 1",
                    "type": "integer"
                },
                "alarm_userids": {
                    "description": "报警用户 多个用户",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_runparallel": {
                    "description": "是否以并行运行子任务 否 1是",
                    "type": "boolean"
                },
                "child_taskids": {
                    "description": "子任务 运行结束后运行子任务",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "create_by": {
                    "description": "创建人",
                    "type": "string"
                },
                "create_byuid": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "cronexpr": {
                    "description": "执行任务表达式",
                    "type": "string"
                },
                "expect_code": {
                    "description": "expect task return code. if not set 0 or 200",
                    "type": "integer"
                },
                "expect_content": {
                    "description": "expect task return content. if not set do not check",
                    "type": "string"
                },
                "host_group": {
                    "description": "执行计划",
                    "type": "string"
                },
                "host_groupid": {
                    "description": "主机组ID",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_runparallel": {
                    "description": "是否以并行运行父任务 0否 1是",
                    "type": "boolean"
                },
                "parent_taskids": {
                    "description": "父任务 运行任务前先运行父任务 以父或子任务运行时 任务不会执行自已的父子任务，防止循环依赖",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remark": {
                    "type": "string"
                },
                "route_policy": {
                    "description": "how to select a run worker from hostgroup",
                    "type": "integer"
                },
                "run": {
                    "description": "-1 为不能运行 1 为可以运行 如果这个任务作为别的任务父任务或者子任务会忽略这个字段",
                    "type": "boolean"
                },
                "task_data": {
                    "description": "任务数据",
                    "type": "object"
                },
                "task_type": {
                    "description": "任务类型",
                    "type": "integer"
                },
                "timeout": {
                    "description": "任务超时时间 (s) -1 no limit",
                    "type": "integer"
                }
            }
        },
        "define.ChangeUserSelf": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "dingphone": {
                    "description": "dingding phone",
                    "type": "string"
                },
                "email": {
                    "description": "用户邮箱",
                    "type": "string"
                },
                "id": {
                    "description": "user id",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "telegram": {
                    "description": "telegram bot chat id",
                    "type": "string"
                },
                "wechat": {
                    "description": "wechat id",
                    "type": "string"
                }
            }
        },
        "define.Cleanlog": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "preday": {
                    "description": "preday几天前的日志",
                    "type": "integer"
                }
            }
        },
        "define.CreateHostGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "addrs": {
                    "description": "主机host",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "define.CreateTask": {
            "type": "object",
            "required": [
                "alarm_status",
                "alarm_userids",
                "cronexpr",
                "host_groupid",
                "name",
                "route_policy",
                "task_data",
                "task_type",
                "timeout"
            ],
            "properties": {
                "alarm_status": {
                    "description": "alarm when task run success or fail or all all:-2 failed: -1 success: 1",
                    "type": "integer"
                },
                "alarm_userids": {
                    "description": "报警用户 多个用户",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_runparallel": {
                    "description": "是否以并行运行子任务 否 1是",
                    "type": "boolean"
                },
                "child_taskids": {
                    "description": "子任务 运行结束后运行子任务",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "create_by": {
                    "description": "创建人",
                    "type": "string"
                },
                "create_byuid": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "cronexpr": {
                    "description": "执行任务表达式",
                    "type": "string"
                },
                "expect_code": {
                    "description": "expect task return code. if not set 0 or 200",
                    "type": "integer"
                },
                "expect_content": {
                    "description": "expect task return content. if not set do not check",
                    "type": "string"
                },
                "host_group": {
                    "description": "执行计划",
                    "type": "string"
                },
                "host_groupid": {
                    "description": "主机组ID",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_runparallel": {
                    "description": "是否以并行运行父任务 0否 1是",
                    "type": "boolean"
                },
                "parent_taskids": {
                    "description": "父任务 运行任务前先运行父任务 以父或子任务运行时 任务不会执行自已的父子任务，防止循环依赖",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remark": {
                    "type": "string"
                },
                "route_policy": {
                    "description": "how to select a run worker from hostgroup",
                    "type": "integer"
                },
                "run": {
                    "description": "-1 为不能运行 1 为可以运行 如果这个任务作为别的任务父任务或者子任务会忽略这个字段",
                    "type": "boolean"
                },
                "task_data": {
                    "description": "任务数据",
                    "type": "object"
                },
                "task_type": {
                    "description": "任务类型",
                    "type": "integer"
                },
                "timeout": {
                    "description": "任务超时时间 (s) -1 no limit",
                    "type": "integer"
                }
            }
        },
        "define.GetID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "define.IDName": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "define.RegistryUser": {
            "type": "object",
            "required": [
                "name",
                "password",
                "role"
            ],
            "properties": {
                "name": {
                    "description": "用户名",
                    "type": "string"
                },
                "password": {
                    "description": "用户密码",
                    "type": "string"
                },
                "remark": {
                    "description": "备注",
                    "type": "string"
                },
                "role": {
                    "description": "用户类型: 1 普通用户 2 管理员",
                    "type": "integer"
                }
            }
        },
        "resp.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "msg",
                    "type": "integer"
                },
                "count": {
                    "description": "data count",
                    "type": "integer"
                },
                "data": {
                    "description": "data",
                    "type": "object"
                },
                "msg": {
                    "description": "code",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Crocidle API",
	Description: "Crocodile Swaager JSON API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
