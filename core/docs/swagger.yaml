definitions:
  define.AdminChangeUser:
    properties:
      forbid:
        description: '禁止用户: 1 未禁止 2 禁止登陆'
        type: boolean
      id:
        description: user id
        type: string
      password:
        description: 用户密码 Common
        type: string
      remark:
        description: 备注 Common
        type: string
      role:
        description: '用户类型: 1 普通用户 2 管理员'
        type: integer
    required:
    - id
    - role
    type: object
  define.ChangeHostGroup:
    properties:
      addrs:
        description: 主机host
        items:
          type: string
        type: array
      id:
        type: string
      remark:
        type: string
    required:
    - id
    type: object
  define.ChangeTask:
    properties:
      alarm_status:
        description: 'alarm when task run success or fail or all all:-2 failed: -1
          success: 1'
        type: integer
      alarm_userids:
        description: 报警用户 多个用户
        items:
          type: string
        type: array
      child_runparallel:
        description: 是否以并行运行子任务 否 1是
        type: boolean
      child_taskids:
        description: 子任务 运行结束后运行子任务
        items:
          type: string
        type: array
      create_by:
        description: 创建人
        type: string
      create_byuid:
        description: 创建人ID
        type: string
      cronexpr:
        description: 执行任务表达式
        type: string
      expect_code:
        description: expect task return code. if not set 0 or 200
        type: integer
      expect_content:
        description: expect task return content. if not set do not check
        type: string
      host_group:
        description: 执行计划
        type: string
      host_groupid:
        description: 主机组ID
        type: string
      id:
        type: string
      name:
        type: string
      parent_runparallel:
        description: 是否以并行运行父任务 0否 1是
        type: boolean
      parent_taskids:
        description: 父任务 运行任务前先运行父任务 以父或子任务运行时 任务不会执行自已的父子任务，防止循环依赖
        items:
          type: string
        type: array
      remark:
        type: string
      route_policy:
        description: how to select a run worker from hostgroup
        type: integer
      run:
        description: -1 为不能运行 1 为可以运行 如果这个任务作为别的任务父任务或者子任务会忽略这个字段
        type: boolean
      task_data:
        description: 任务数据
        type: object
      task_type:
        description: 任务类型
        type: integer
      timeout:
        description: 任务超时时间 (s) -1 no limit
        type: integer
    required:
    - alarm_status
    - alarm_userids
    - cronexpr
    - host_groupid
    - id
    - name
    - route_policy
    - task_data
    - task_type
    - timeout
    type: object
  define.ChangeUserSelf:
    properties:
      dingphone:
        description: dingding phone
        type: string
      email:
        description: 用户邮箱
        type: string
      id:
        description: user id
        type: string
      password:
        type: string
      remark:
        type: string
      telegram:
        description: telegram bot chat id
        type: string
      wechat:
        description: wechat id
        type: string
    required:
    - id
    type: object
  define.Cleanlog:
    properties:
      name:
        type: string
      preday:
        description: preday几天前的日志
        type: integer
    required:
    - name
    type: object
  define.CreateHostGroup:
    properties:
      addrs:
        description: 主机host
        items:
          type: string
        type: array
      name:
        type: string
      remark:
        type: string
    required:
    - name
    type: object
  define.CreateTask:
    properties:
      alarm_status:
        description: 'alarm when task run success or fail or all all:-2 failed: -1
          success: 1'
        type: integer
      alarm_userids:
        description: 报警用户 多个用户
        items:
          type: string
        type: array
      child_runparallel:
        description: 是否以并行运行子任务 否 1是
        type: boolean
      child_taskids:
        description: 子任务 运行结束后运行子任务
        items:
          type: string
        type: array
      create_by:
        description: 创建人
        type: string
      create_byuid:
        description: 创建人ID
        type: string
      cronexpr:
        description: 执行任务表达式
        type: string
      expect_code:
        description: expect task return code. if not set 0 or 200
        type: integer
      expect_content:
        description: expect task return content. if not set do not check
        type: string
      host_group:
        description: 执行计划
        type: string
      host_groupid:
        description: 主机组ID
        type: string
      name:
        type: string
      parent_runparallel:
        description: 是否以并行运行父任务 0否 1是
        type: boolean
      parent_taskids:
        description: 父任务 运行任务前先运行父任务 以父或子任务运行时 任务不会执行自已的父子任务，防止循环依赖
        items:
          type: string
        type: array
      remark:
        type: string
      route_policy:
        description: how to select a run worker from hostgroup
        type: integer
      run:
        description: -1 为不能运行 1 为可以运行 如果这个任务作为别的任务父任务或者子任务会忽略这个字段
        type: boolean
      task_data:
        description: 任务数据
        type: object
      task_type:
        description: 任务类型
        type: integer
      timeout:
        description: 任务超时时间 (s) -1 no limit
        type: integer
    required:
    - alarm_status
    - alarm_userids
    - cronexpr
    - host_groupid
    - name
    - route_policy
    - task_data
    - task_type
    - timeout
    type: object
  define.GetID:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  define.IDName:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  define.RegistryUser:
    properties:
      name:
        description: 用户名
        type: string
      password:
        description: 用户密码
        type: string
      remark:
        description: 备注
        type: string
      role:
        description: '用户类型: 1 普通用户 2 管理员'
        type: integer
    required:
    - name
    - password
    - role
    type: object
  resp.Response:
    properties:
      code:
        description: msg
        type: integer
      count:
        description: data count
        type: integer
      data:
        description: data
        type: object
      msg:
        description: code
        type: string
    type: object
info:
  contact:
    email: labulakalia@gmail.com
    name: labulaka521
    url: http://www.swagger.io/support
  description: Crocodile Swaager JSON API
  license:
    name: MIT 2.0
    url: https://zrDispatch/blob/master/LICENSE
  termsOfService: https://zrDispatch
  title: Crocidle API
  version: "1.0"
paths:
  /api/v1/host:
    delete:
      description: delete host
      parameters:
      - description: ID
        in: body
        name: StopHost
        required: true
        schema:
          $ref: '#/definitions/define.GetID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: delete host
      tags:
      - Host
    get:
      description: get all registry host
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get all hosts
      tags:
      - Host
  /api/v1/host/select:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: Get Task Select
      tags:
      - Host
  /api/v1/host/stop:
    put:
      description: stop host worker
      parameters:
      - description: ID
        in: body
        name: StopHost
        required: true
        schema:
          $ref: '#/definitions/define.GetID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: stop host worker
      tags:
      - Host
  /api/v1/hostgroup:
    delete:
      description: delete hostgroup
      parameters:
      - description: HostGroup
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/define.GetID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: delete hostgroup
      tags:
      - HostGroup
    get:
      description: get select option
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get name,id
      tags:
      - HostGroup
    post:
      description: create new hostgroup
      parameters:
      - description: HostGroup
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/define.CreateHostGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: create hostgroup
      tags:
      - HostGroup
    put:
      description: change hostgroup
      parameters:
      - description: HostGroup
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/define.ChangeHostGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: change hostgroup
      tags:
      - HostGroup
  /api/v1/hostgroup/hosts:
    get:
      description: get all hostgroup
      parameters:
      - description: ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get host detail by hostgroup id
      tags:
      - HostGroup
  /api/v1/task:
    delete:
      parameters:
      - description: delete task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/define.GetID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: delete task
      tags:
      - Task
    get:
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: PreSearchName
        in: query
        name: psname
        type: string
      - description: Self Create Task
        in: query
        name: self
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks
      tags:
      - Task
    post:
      parameters:
      - description: create task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/define.CreateTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: create new task
      tags:
      - Task
    put:
      parameters:
      - description: change task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/define.ChangeTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: change task
      tags:
      - Task
  /api/v1/task/clone:
    delete:
      parameters:
      - description: clean task log
        in: body
        name: Log
        required: true
        schema:
          $ref: '#/definitions/define.Cleanlog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: create a task by copy old task
      tags:
      - Task
    post:
      parameters:
      - description: clone task
        in: body
        name: Task
        required: true
        schema:
          $ref: '#/definitions/define.IDName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: create a task by copy old task
      tags:
      - Task
  /api/v1/task/cron:
    get:
      parameters:
      - description: Expr
        in: query
        name: expr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: parse cronexpr
      tags:
      - Task
  /api/v1/task/info:
    get:
      parameters:
      - description: id
        in: query
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks
      tags:
      - Task
  /api/v1/task/kill:
    put:
      parameters:
      - in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: kill running task
      tags:
      - Task
  /api/v1/task/log:
    get:
      parameters:
      - description: taskName
        in: query
        name: taskname
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks
      tags:
      - Task
  /api/v1/task/log/tree:
    get:
      parameters:
      - description: ID
        in: query
        name: id
        type: integer
      - description: StartTime
        in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks log tree data
      tags:
      - Task
  /api/v1/task/run:
    put:
      parameters:
      - in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks
      tags:
      - Task
  /api/v1/task/running:
    get:
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get tasks
      tags:
      - Task
  /api/v1/task/select:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: Get Task Select
      tags:
      - Task
  /api/v1/user/admin:
    put:
      description: admin change user's role,forbid,password,remark
      parameters:
      - description: Admin Change User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/define.AdminChangeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: admin change user info
      tags:
      - User
  /api/v1/user/all:
    get:
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get all users info
      tags:
      - User
  /api/v1/user/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: get user info by token
      tags:
      - User
    put:
      description: change self config,like email,wechat,dingphone,slack,telegram,password,remark
      parameters:
      - description: Change Self User Info
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/define.ChangeUserSelf'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: user change self's config info
      tags:
      - User
  /api/v1/user/login:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - BasicAuth: []
      summary: login user
      tags:
      - User
  /api/v1/user/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - BasicAuth: []
      summary: logout user
      tags:
      - User
  /api/v1/user/registry:
    post:
      parameters:
      - description: registry user
        in: body
        name: Registry
        required: true
        schema:
          $ref: '#/definitions/define.RegistryUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - ApiKeyAuth: []
      summary: registry new user
      tags:
      - User
  /api/v1/user/select:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.Response'
      security:
      - BasicAuth: []
      summary: return name,id
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
